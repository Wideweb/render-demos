#version 330 core

/////////////////////////////////////////////////////////////
//////////////////////// ATTRIBUTES /////////////////////////
/////////////////////////////////////////////////////////////
layout(location = 0) in vec3 a_vertexPosition;
layout(location = 1) in vec3 a_vertexNormal;
layout(location = 2) in vec2 a_vertexTextureCoord;
layout(location = 3) in vec3 a_vertexTangent;
layout(location = 4) in vec3 a_vertexBitangent;
layout(location = 5) in vec3 a_vertexColor;

/////////////////////////////////////////////////////////////
//////////////////////// UNIFORMS ///////////////////////////
/////////////////////////////////////////////////////////////
uniform mat4 u_model;
uniform mat4 u_view;
uniform mat4 u_projection;

/////////////////////////////////////////////////////////////
///////////////////////// VARYING ///////////////////////////
/////////////////////////////////////////////////////////////
out vec3 v_color;
out vec2 v_texCoord;
out vec3 v_fragPos;
out vec3 v_fragCameraPos;
out vec3 v_normal;

/////////////////////////////////////////////////////////////
////////////////////////// MAIN /////////////////////////////
/////////////////////////////////////////////////////////////
void main() {
    vec4 worldPosition = u_model * vec4(a_vertexPosition, 1.0);
    vec4 cameraPosition = u_view * worldPosition;

    v_color = a_vertexColor;
    v_texCoord = a_vertexTextureCoord;
    v_fragPos = vec3(worldPosition);
    v_fragCameraPos = vec3(cameraPosition);
    v_normal = a_vertexNormal;

    gl_Position = u_projection * cameraPosition;
}